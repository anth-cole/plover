-- test Void :: u8 := 22;

-- zeros {n :: u32} :: double[n]  := vec i in : -> 0;
-- zeros2 {m :: u32} {n :: u32} :: double[m,n]
--   := vec i in :, j in : -> 0;

-- foo (l :: u8) (m :: u8) (n :: u8) (A :: u8[3]) (B :: u8[3,n]) :: u8  := (
-- --  A <- B;
-- --  B <- vec i in 0: -> i;
--   A <- zeros();
--   B <- vec((vec i in : -> 1), (vec i in : -> i), (vec i in : -> 22));
--   C := (blah := vec i in 5 -> 222; blah);
--   D := vec i in 5 -> 223;
--   1;2;3); -- if True then n else if True then n else n;

-- foo2 {n :: u8} (_A :: double[n,n]) :: double[n,n] := zeros2();

g {n :: u8} (A :: double[n,n]) (B :: u8[2,2]) :: Void
  := (A[:,1] <- A[:,2]);
