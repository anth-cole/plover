extern CONSTANT :: double;
extern g (x :: double) :: double;
extern MY_CONST :: double;
static f {n :: u8} (A :: double[n]) :: double;

f {n :: u8} (A :: double[n]) :: double
  := sum i in n -> 2 * g A[i] * CONSTANT + MY_CONST;

dim {n :: u8} (A :: double[n]) :: u8 := n;

h (x :: double)  :: double
 := x + x;

mean {n :: u8} (A :: double[n]) :: double
 := (sum i in n -> A[i]) / dim A;

quadform {n :: u8} (A :: double[n,n]) (v :: double[n]) :: double
  := v^T * A * v;

extern struct navigation_measurement_t (
  pseudorange :: double;
);

blah {n :: u8} (x :: navigation_measurement_t[n]) :: double
  := f x + sum i in n -> x[i].pseudorange;

struct LengthedArray (
  m :: u8;
  arr :: double[m];
);

zeros {m :: u8} :: double[m]
 := vec i in m -> 0;

test_zeros (n :: u8) :: double[n]
 := (zeros {n});
